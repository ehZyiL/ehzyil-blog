<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ehzyil.mapper.CommentMapper">
    <select id="selectCommentCountByTypeId" resultType="com.ehzyil.model.vo.front.CommentCountVO">
        select type_id as id, count(*) as commentCount
        from t_comment
        where comment_type=#{commentType} and type_id in
        <foreach open="(" collection="typeIdList" item="typeId" separator="," close=")">
            #{typeId}
        </foreach>
        group by type_id
    </select>

    <select id="selectRecentCommentVOList" resultType="com.ehzyil.model.vo.front.RecentCommentVO">
        select c.id, c.comment_content, c.create_time, u.avatar, u.nickname
        from t_comment c
                 left join t_user u on c.from_uid = u.id
        where is_check = 1
        order by create_time desc limit 5
    </select>
    <select id="selectParentComment" resultType="com.ehzyil.model.vo.front.CommentVO">
        select c.id, c.comment_content, c.create_time, u.avatar, u.nickname fromNickname ,u.id fromUid,u.web_site
        from t_comment c
        left join t_user u on c.from_uid = u.id

        <where>
            <if test="conditionDTO.typeId != null">
                type_id=#{conditionDTO.typeId}
            </if>
            AND comment_type=#{conditionDTO.commentType}
            AND c.is_check=1
            AND parent_id IS NULL
        </where>
        ORDER BY c.id DESC
        LIMIT #{limit},#{size}
    </select>
    <select id="selectReplyByParentIdList" resultType="com.ehzyil.model.vo.front.CommentReplyVO">
        select *
        from (select c.id,
        c.comment_content,
        c.create_time,
        c.from_uid,
        c.parent_id,
        u.nickname as fromNickname,
        u.avatar,
        c.to_uid,
        r.nickname as to_nickname,
        ROW_NUMBER() over (PARTITION BY parent_id ORDER BY create_time ASC ) row_num
        <!--表示根据COL1分组，在分组内部根据 COL2排序-->
        FROM t_comment c
        JOIN t_user u ON c.from_uid = u.id
        JOIN t_user r ON c.to_uid = r.id
        where c.is_check = 1 AND parent_id IN
        <foreach collection="parentCommentIdList" open="(" close=")" item="commentId" separator=",">
            #{commentId}
        </foreach>) t
        where 4 > t.row_num
    </select>
    <select id="selectReplyCountByParentId" resultType="com.ehzyil.model.vo.front.CommentReplyCountVO">
        select parent_id as comment_id, count(1) as reply_count
        from t_comment
        where is_check=1 and comment_type=#{commentType} and parent_id in
        <foreach open="(" collection="typeIdList" item="typeId" separator="," close=")">
            #{typeId}
        </foreach>
        group by parent_id
    </select>

    <select id="selectReplyByParentId" resultType="com.ehzyil.model.vo.front.ReplyVO">
        SELECT c.from_uid,
               u.nickname AS from_nickname,
               u.avatar,
               c.to_uid,
               r.nickname as to_nickname,
               c.id,
               c.parent_id,
               c.comment_content,
               c.create_time
        FROM t_comment c
                 JOIN t_user u ON c.from_uid = u.id
                 JOIN t_user r ON c.to_uid = r.id
        WHERE c.is_check = 1
          AND parent_id = #{commentId}
        ORDER BY c.id ASC LIMIT #{limit}, #{size}
    </select>

    <select id="listCommentBackVO" resultType="com.ehzyil.model.vo.admin.CommentBackVO">
        SELECT c.id,
        u.avatar,
        u.nickname AS from_nickname,
        r.nickname AS to_nickname,
        a.article_title,
        c.comment_content,
        c.comment_type,
        c.is_check,
        c.create_time
        FROM t_comment c
        LEFT JOIN t_article a ON c.type_id = a.id
        LEFT JOIN t_user u ON c.from_uid = u.id
        LEFT JOIN t_user r ON c.to_uid = r.id
        <where>
            <if test="condition.commentType != null">
                c.comment_type=#{condition.commentType}
            </if>
            <if test="condition.keyword != null">
                AND u.nickname LIKE concat('%',#{condition.keyword},'%')
            </if>
            <if test="condition.isCheck != null">
                AND c.is_check = #{condition.isCheck}
            </if>
        </where>
        ORDER BY c.id DESC
        LIMIT #{limit},#{size}
    </select>

    <select id="countComment" resultType="java.lang.Long">
        SELECT
        count(c.id)
        from
        t_comment c
        LEFT JOIN t_user u ON c.from_uid = u.id
        <where>
            <if test="condition.commentType != null">
                c.comment_type = #{condition.commentType}
            </if>
            <if test="condition.keyword != null">
                and u.nickname like concat('%',#{condition.keyword},'%')
            </if>
            <if test="condition.isCheck != null">
                and c.is_check = #{condition.isCheck}
            </if>
        </where>
    </select>
</mapper>
